package com.ramda;

import java.util.Arrays;
import java.util.List;
import java.util.function.Function;
import java.util.function.IntBinaryOperator;
import java.util.function.Predicate;
import java.util.function.ToIntFunction;



public class PredicateEX{
   private static List<Student> list = Arrays.asList(
         new Student("홍길동","남자",90),
         new Student("김순희","여자",90),
         new Student("감자바","남자",95),
         new Student("박한나","여자",92)
         );
   public static int max(IntBinaryOperator operator) {
	   int max = 0;
	   for(int i = 0;i<list.size();i++) {
		   max = operator.applyAsInt(max, list.get(i).getScore());
	   }
	return max;
   }
   
   public static double avg(Predicate<Student> predicate) {
      int count = 0,sum = 0;

      for(Student student : list) {
         if(predicate.test(student)) {
            count++;
            sum += student.getScore();
         }
      }return (double)sum/count;
   }

   public static void main(String[] args) {
	   int max = max((a,b)->{
		   if(a>=b)return a;
		   else return b;
	   });
	   System.out.println("최고점수: "+max);
	   
      double maleAvg = avg(t->t.getSex().equals("남자"));
      System.out.println("남자 평균: "+maleAvg);
      
      double femaleAvg = avg(t->t.getSex().equals("여자"));
      System.out.println("여자 평균: "+femaleAvg);
   }

}
