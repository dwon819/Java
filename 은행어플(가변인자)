package BankSystem;

import java.util.Scanner;

public class AccountExample {
	private static Account[] accountArray = new Account[100];
	private static Scanner scanner = new Scanner(System.in);
	public static void main(String[] args) {
		// TODO 자동 생성된 메소드 스텁
		while(true) {
			System.out.println("-----------------------------------------------------------------------------");
			System.out.println("1. 계좌 생성 | 2. 계좌 목록  | 3. 예금 | 4. 출금 | 5. 계좌이체 | 6. 종료");
			System.out.println("-----------------------------------------------------------------------------");
			System.out.println("선택>> ");
			
			int selectNo = scanner.nextInt();
			
			if(selectNo == 1) {
				createAccount();
			}else if(selectNo == 2) {
				accountList();
			}else if(selectNo == 3) {
				deposit();
			}else if(selectNo == 4) {
				withdraw();
			}else if(selectNo ==5) {
				transfer();
			} else if(selectNo == 6) {
				break;
			}
		}
		System.out.println("프로그램이 종료되었습니다.");
	}
	
	private static void createAccount() {
		System.out.println("------------");
		System.out.println("계좌 생성");
		System.out.println("------------");
		System.out.println("계좌 번호: ");
		String ano = scanner.next();
		
		System.out.println("계좌주: ");
		String owner = scanner.next();
		
		System.out.println("초기입금액: ");
		int balance = scanner.nextInt();
		
		Account newAccount = new Account(ano,owner,balance);
		
		for(int i = 0; i < accountArray.length; i++) {
			if(accountArray[i]==null) {
				accountArray[i] = newAccount;
				break;
			}
		}
	}
	private static void accountList() {
		System.out.println("------------");
		System.out.println("계좌 목록");
		System.out.println("------------");
		
		for(Account acc : accountArray) {
			if(acc != null) {
				System.out.println(acc.getAno()+" "+acc.getOwner()+" "+acc.getBalance());
			}
		}
	}
	private static void deposit() {
		System.out.println("------------");
		System.out.println("예금");
		System.out.println("------------");
		
		System.out.println("계좌 번호: ");
		String ano = scanner.next();
		
		System.out.println("예금액: ");
		int money = scanner.nextInt();
		Account[] account = findAccount(ano);
		
		if(account[0] == null) {
			System.out.println("개설된 계좌가 없습니다.");
		}else {
			account[0].setBalance(account[0].getBalance()+money);
			System.out.println("예금이 완료 되었습니다.");
		}
		
	}
	
	private static void withdraw() {
		System.out.println("------------");
		System.out.println("출금");
		System.out.println("------------");
		
		System.out.println("계좌 번호: ");
		String ano = scanner.next();
		
		System.out.println("출금액: ");
		int money = scanner.nextInt();
		Account[] account = findAccount(ano);
		
		if(account == null) {
			System.out.println("개설된 계좌가 없습니다.");
		}else {
			account[0].setBalance(account[0].getBalance()-money);
			System.out.println("출금이 완료 되었습니다.");
		}
	
	}
	private static void transfer() {
	      System.out.println("사용할 계좌의 계좌번호를 입력하십시오");
	      String ano1 = scanner.next();
	      System.out.println("송금할 계좌의 계좌번호를 입력하십시오");
	      String ano2 = scanner.next();
	      Account account[]= findAccount(ano1,ano2);
	      
	      System.out.println("송금할 금액을 입력하세요.");
	      int transfer = scanner.nextInt();
	      
	      if(account[0] != null && account[1] != null) {
	         if(account[0].getBalance() > transfer) {
	            account[0].setBalance(account[0].getBalance() - transfer);
	            account[1].setBalance(account[1].getBalance() + transfer);
	            System.out.println("송금에 성공하셨습니다.");
	         }
	         else
	            System.out.println("잔고를 초과하는 금액은 송금이 제한됩니다.");
	      }else {
	         System.out.println("계좌를 찾을 수 없습니다.");
	      }
	   }
	
	
//	private static void minerAccount() {
//		System.out.println("------------");
//		System.out.println("계좌이체");
//		System.out.println("------------");
//		
//		System.out.println("계좌 번호: ");
//		String ano = scanner.next();
//		
//		System.out.println("보낼 금액: ");
//		int money = scanner.nextInt();
//		Account account = findAccount(ano);
//		if(account == null) {
//			System.out.println("개설된 계좌가 없습니다.");
//		}else {
//			account.setBalance(account.getBalance()-money);
//			System.out.println("출금이 완료 되었습니다.");
//		}		
//		System.out.println("입금 하실 계좌 번호: ");
//		ano = scanner.next();
//		
//		account = findAccount(ano);
//		
//		if(account == null) {
//			System.out.println("개설된 계좌가 없습니다.");
//		}else {
//			account.setBalance(account.getBalance()+money);
//			System.out.println("예금이 완료 되었습니다.");
//		}
//	}
	
//	private static Account findAccount(String ano) {
//		Account account = null;
//		for(Account acc : accountArray) {
//			if(acc != null) {
//				String dbAno = acc.getAno();
//				if(dbAno.equals(ano)) {
//					account = acc;
//					break;
//				}
//		
//			}
//		}
//		return account;
//		
//	}
	
	private static Account[] findAccount(String ... ano) {//가변인자로 만든 메소드
		Account[] account = new Account[ano.length];
		for(int i = 0; accountArray[i]!= null;i++) {
			String dbAno = accountArray[i].getAno();
			for(int j=0;j<ano.length;j++) {
				if(dbAno.equals(ano[j])) {
					account[j] = accountArray[i];
					break;
				}
			}
			
		}
		return account;
		
	}
	
//	private static void createAccount() {
//		
//		System.out.println("---------");
//		System.out.println("계좌 생성");
//		System.out.println("---------");
//		System.out.print("계좌 번호: ");
//		String ano = scanner.next();
//		System.out.print("계좌주: ");
//		String owner = scanner.next();
//		System.out.print("초기입금액: ");
//		int balance = scanner.nextInt();
//		Account acc = new Account(ano,owner,balance);
//		for(int i = 0; i < accountArray.length; i++) {
//			if(accountArray[i]==null) {
//				accountArray[i] = acc;
//				break;
//			}
//		}
//		System.out.println("결과: 계좌가 생성되었습니다");
//
//	}
//	private static void accountList() {
//		System.out.println("---------");
//		System.out.println("계좌 목록");
//		System.out.println("---------");
//		for(int i = 0; i < accountArray.length; i++) {
//			Account acc1 = accountArray[i];
//			if(accountArray[i]!=null) {
//				System.out.println(acc1.getAno()+" "+acc1.getOwner()+" "+acc1.getBalance());
//			}
//		}
//	}
//	private static void deposit() {
//	
//	}
//	private static void withdraw() {
//	
//	}

}
